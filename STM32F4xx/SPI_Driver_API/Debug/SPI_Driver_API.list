
SPI_Driver_API.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000998  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000000c  08000b2c  08000b2c  00010b2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000b38  08000b38  00010b40  2**0
                  CONTENTS
  4 .ARM          00000000  08000b38  08000b38  00010b40  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000b38  08000b40  00010b40  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000b38  08000b38  00010b38  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000b3c  08000b3c  00010b3c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010b40  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000b40  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000b40  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010b40  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001585  00000000  00000000  00010b70  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000452  00000000  00000000  000120f5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000188  00000000  00000000  00012548  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000150  00000000  00000000  000126d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000211f  00000000  00000000  00012820  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000018d6  00000000  00000000  0001493f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00008e0e  00000000  00000000  00016215  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0001f023  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000005a8  00000000  00000000  0001f074  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000b14 	.word	0x08000b14

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08000b14 	.word	0x08000b14

080001d4 <strlen>:
 80001d4:	4603      	mov	r3, r0
 80001d6:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001da:	2a00      	cmp	r2, #0
 80001dc:	d1fb      	bne.n	80001d6 <strlen+0x2>
 80001de:	1a18      	subs	r0, r3, r0
 80001e0:	3801      	subs	r0, #1
 80001e2:	4770      	bx	lr

080001e4 <GPIO_PeripheralClockControl>:
#include "stm32f401xx.h"
#include "stm32f401xx_gpio_driver.h"
#include<stdint.h>

void GPIO_PeripheralClockControl(GPIOx_RegDef_t *pGPIOx,uint8_t En_Di)
{
 80001e4:	b480      	push	{r7}
 80001e6:	b083      	sub	sp, #12
 80001e8:	af00      	add	r7, sp, #0
 80001ea:	6078      	str	r0, [r7, #4]
 80001ec:	460b      	mov	r3, r1
 80001ee:	70fb      	strb	r3, [r7, #3]
	if(En_Di==ENABLE)
 80001f0:	78fb      	ldrb	r3, [r7, #3]
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	d15a      	bne.n	80002ac <GPIO_PeripheralClockControl+0xc8>
	{
		if(pGPIOx==GPIOA)
 80001f6:	687b      	ldr	r3, [r7, #4]
 80001f8:	4a5c      	ldr	r2, [pc, #368]	; (800036c <GPIO_PeripheralClockControl+0x188>)
 80001fa:	4293      	cmp	r3, r2
 80001fc:	d105      	bne.n	800020a <GPIO_PeripheralClockControl+0x26>
		{
			GPIOA_PCLK_EN();
 80001fe:	4b5c      	ldr	r3, [pc, #368]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 8000200:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000202:	4a5b      	ldr	r2, [pc, #364]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 8000204:	f043 0301 	orr.w	r3, r3, #1
 8000208:	6313      	str	r3, [r2, #48]	; 0x30
		}
		if(pGPIOx==GPIOB)
 800020a:	687b      	ldr	r3, [r7, #4]
 800020c:	4a59      	ldr	r2, [pc, #356]	; (8000374 <GPIO_PeripheralClockControl+0x190>)
 800020e:	4293      	cmp	r3, r2
 8000210:	d105      	bne.n	800021e <GPIO_PeripheralClockControl+0x3a>
				{
					GPIOB_PCLK_EN();
 8000212:	4b57      	ldr	r3, [pc, #348]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 8000214:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000216:	4a56      	ldr	r2, [pc, #344]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 8000218:	f043 0302 	orr.w	r3, r3, #2
 800021c:	6313      	str	r3, [r2, #48]	; 0x30
				}
		if(pGPIOx==GPIOC)
 800021e:	687b      	ldr	r3, [r7, #4]
 8000220:	4a55      	ldr	r2, [pc, #340]	; (8000378 <GPIO_PeripheralClockControl+0x194>)
 8000222:	4293      	cmp	r3, r2
 8000224:	d105      	bne.n	8000232 <GPIO_PeripheralClockControl+0x4e>
				{
					GPIOC_PCLK_EN();
 8000226:	4b52      	ldr	r3, [pc, #328]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 8000228:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800022a:	4a51      	ldr	r2, [pc, #324]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 800022c:	f043 0304 	orr.w	r3, r3, #4
 8000230:	6313      	str	r3, [r2, #48]	; 0x30
				}
		if(pGPIOx==GPIOD)
 8000232:	687b      	ldr	r3, [r7, #4]
 8000234:	4a51      	ldr	r2, [pc, #324]	; (800037c <GPIO_PeripheralClockControl+0x198>)
 8000236:	4293      	cmp	r3, r2
 8000238:	d105      	bne.n	8000246 <GPIO_PeripheralClockControl+0x62>
				{
					GPIOD_PCLK_EN();
 800023a:	4b4d      	ldr	r3, [pc, #308]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 800023c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800023e:	4a4c      	ldr	r2, [pc, #304]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 8000240:	f043 0308 	orr.w	r3, r3, #8
 8000244:	6313      	str	r3, [r2, #48]	; 0x30
				}
		if(pGPIOx==GPIOE)
 8000246:	687b      	ldr	r3, [r7, #4]
 8000248:	4a4d      	ldr	r2, [pc, #308]	; (8000380 <GPIO_PeripheralClockControl+0x19c>)
 800024a:	4293      	cmp	r3, r2
 800024c:	d105      	bne.n	800025a <GPIO_PeripheralClockControl+0x76>
				{
					GPIOE_PCLK_EN();
 800024e:	4b48      	ldr	r3, [pc, #288]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 8000250:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000252:	4a47      	ldr	r2, [pc, #284]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 8000254:	f043 0310 	orr.w	r3, r3, #16
 8000258:	6313      	str	r3, [r2, #48]	; 0x30
				}
		if(pGPIOx==GPIOF)
 800025a:	687b      	ldr	r3, [r7, #4]
 800025c:	4a49      	ldr	r2, [pc, #292]	; (8000384 <GPIO_PeripheralClockControl+0x1a0>)
 800025e:	4293      	cmp	r3, r2
 8000260:	d105      	bne.n	800026e <GPIO_PeripheralClockControl+0x8a>
				{
					GPIOF_PCLK_EN();
 8000262:	4b43      	ldr	r3, [pc, #268]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 8000264:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000266:	4a42      	ldr	r2, [pc, #264]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 8000268:	f043 0320 	orr.w	r3, r3, #32
 800026c:	6313      	str	r3, [r2, #48]	; 0x30
				}
		if(pGPIOx==GPIOG)
 800026e:	687b      	ldr	r3, [r7, #4]
 8000270:	4a45      	ldr	r2, [pc, #276]	; (8000388 <GPIO_PeripheralClockControl+0x1a4>)
 8000272:	4293      	cmp	r3, r2
 8000274:	d105      	bne.n	8000282 <GPIO_PeripheralClockControl+0x9e>
				{
					GPIOG_PCLK_EN();
 8000276:	4b3e      	ldr	r3, [pc, #248]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 8000278:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800027a:	4a3d      	ldr	r2, [pc, #244]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 800027c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000280:	6313      	str	r3, [r2, #48]	; 0x30
				}
		if(pGPIOx==GPIOH)
 8000282:	687b      	ldr	r3, [r7, #4]
 8000284:	4a41      	ldr	r2, [pc, #260]	; (800038c <GPIO_PeripheralClockControl+0x1a8>)
 8000286:	4293      	cmp	r3, r2
 8000288:	d105      	bne.n	8000296 <GPIO_PeripheralClockControl+0xb2>
				{
					GPIOH_PCLK_EN();
 800028a:	4b39      	ldr	r3, [pc, #228]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 800028c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800028e:	4a38      	ldr	r2, [pc, #224]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 8000290:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000294:	6313      	str	r3, [r2, #48]	; 0x30
				}
		if(pGPIOx==GPIOI)
 8000296:	687b      	ldr	r3, [r7, #4]
 8000298:	4a3d      	ldr	r2, [pc, #244]	; (8000390 <GPIO_PeripheralClockControl+0x1ac>)
 800029a:	4293      	cmp	r3, r2
 800029c:	d160      	bne.n	8000360 <GPIO_PeripheralClockControl+0x17c>
				{
					GPIOI_PCLK_EN();
 800029e:	4b34      	ldr	r3, [pc, #208]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 80002a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a2:	4a33      	ldr	r2, [pc, #204]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 80002a4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80002a8:	6313      	str	r3, [r2, #48]	; 0x30
				if(pGPIOx==GPIOI)
						{
							GPIOI_PCLK_DI();
						}
	}
}
 80002aa:	e059      	b.n	8000360 <GPIO_PeripheralClockControl+0x17c>
		if(pGPIOx==GPIOA)
 80002ac:	687b      	ldr	r3, [r7, #4]
 80002ae:	4a2f      	ldr	r2, [pc, #188]	; (800036c <GPIO_PeripheralClockControl+0x188>)
 80002b0:	4293      	cmp	r3, r2
 80002b2:	d105      	bne.n	80002c0 <GPIO_PeripheralClockControl+0xdc>
					GPIOA_PCLK_DI();
 80002b4:	4b2e      	ldr	r3, [pc, #184]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 80002b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002b8:	4a2d      	ldr	r2, [pc, #180]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 80002ba:	f023 0301 	bic.w	r3, r3, #1
 80002be:	6313      	str	r3, [r2, #48]	; 0x30
				if(pGPIOx==GPIOB)
 80002c0:	687b      	ldr	r3, [r7, #4]
 80002c2:	4a2c      	ldr	r2, [pc, #176]	; (8000374 <GPIO_PeripheralClockControl+0x190>)
 80002c4:	4293      	cmp	r3, r2
 80002c6:	d105      	bne.n	80002d4 <GPIO_PeripheralClockControl+0xf0>
							GPIOB_PCLK_DI();
 80002c8:	4b29      	ldr	r3, [pc, #164]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 80002ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002cc:	4a28      	ldr	r2, [pc, #160]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 80002ce:	f023 0302 	bic.w	r3, r3, #2
 80002d2:	6313      	str	r3, [r2, #48]	; 0x30
				if(pGPIOx==GPIOC)
 80002d4:	687b      	ldr	r3, [r7, #4]
 80002d6:	4a28      	ldr	r2, [pc, #160]	; (8000378 <GPIO_PeripheralClockControl+0x194>)
 80002d8:	4293      	cmp	r3, r2
 80002da:	d105      	bne.n	80002e8 <GPIO_PeripheralClockControl+0x104>
							GPIOC_PCLK_DI();
 80002dc:	4b24      	ldr	r3, [pc, #144]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 80002de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002e0:	4a23      	ldr	r2, [pc, #140]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 80002e2:	f023 0304 	bic.w	r3, r3, #4
 80002e6:	6313      	str	r3, [r2, #48]	; 0x30
				if(pGPIOx==GPIOD)
 80002e8:	687b      	ldr	r3, [r7, #4]
 80002ea:	4a24      	ldr	r2, [pc, #144]	; (800037c <GPIO_PeripheralClockControl+0x198>)
 80002ec:	4293      	cmp	r3, r2
 80002ee:	d105      	bne.n	80002fc <GPIO_PeripheralClockControl+0x118>
							GPIOD_PCLK_DI();
 80002f0:	4b1f      	ldr	r3, [pc, #124]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 80002f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002f4:	4a1e      	ldr	r2, [pc, #120]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 80002f6:	f023 0308 	bic.w	r3, r3, #8
 80002fa:	6313      	str	r3, [r2, #48]	; 0x30
				if(pGPIOx==GPIOE)
 80002fc:	687b      	ldr	r3, [r7, #4]
 80002fe:	4a20      	ldr	r2, [pc, #128]	; (8000380 <GPIO_PeripheralClockControl+0x19c>)
 8000300:	4293      	cmp	r3, r2
 8000302:	d105      	bne.n	8000310 <GPIO_PeripheralClockControl+0x12c>
							GPIOE_PCLK_DI();
 8000304:	4b1a      	ldr	r3, [pc, #104]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 8000306:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000308:	4a19      	ldr	r2, [pc, #100]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 800030a:	f023 0310 	bic.w	r3, r3, #16
 800030e:	6313      	str	r3, [r2, #48]	; 0x30
				if(pGPIOx==GPIOF)
 8000310:	687b      	ldr	r3, [r7, #4]
 8000312:	4a1c      	ldr	r2, [pc, #112]	; (8000384 <GPIO_PeripheralClockControl+0x1a0>)
 8000314:	4293      	cmp	r3, r2
 8000316:	d105      	bne.n	8000324 <GPIO_PeripheralClockControl+0x140>
							GPIOF_PCLK_DI();
 8000318:	4b15      	ldr	r3, [pc, #84]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 800031a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800031c:	4a14      	ldr	r2, [pc, #80]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 800031e:	f023 0320 	bic.w	r3, r3, #32
 8000322:	6313      	str	r3, [r2, #48]	; 0x30
				if(pGPIOx==GPIOG)
 8000324:	687b      	ldr	r3, [r7, #4]
 8000326:	4a18      	ldr	r2, [pc, #96]	; (8000388 <GPIO_PeripheralClockControl+0x1a4>)
 8000328:	4293      	cmp	r3, r2
 800032a:	d105      	bne.n	8000338 <GPIO_PeripheralClockControl+0x154>
							GPIOG_PCLK_DI();
 800032c:	4b10      	ldr	r3, [pc, #64]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 800032e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000330:	4a0f      	ldr	r2, [pc, #60]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 8000332:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000336:	6313      	str	r3, [r2, #48]	; 0x30
				if(pGPIOx==GPIOH)
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	4a14      	ldr	r2, [pc, #80]	; (800038c <GPIO_PeripheralClockControl+0x1a8>)
 800033c:	4293      	cmp	r3, r2
 800033e:	d105      	bne.n	800034c <GPIO_PeripheralClockControl+0x168>
							GPIOH_PCLK_DI();
 8000340:	4b0b      	ldr	r3, [pc, #44]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 8000342:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000344:	4a0a      	ldr	r2, [pc, #40]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 8000346:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800034a:	6313      	str	r3, [r2, #48]	; 0x30
				if(pGPIOx==GPIOI)
 800034c:	687b      	ldr	r3, [r7, #4]
 800034e:	4a10      	ldr	r2, [pc, #64]	; (8000390 <GPIO_PeripheralClockControl+0x1ac>)
 8000350:	4293      	cmp	r3, r2
 8000352:	d105      	bne.n	8000360 <GPIO_PeripheralClockControl+0x17c>
							GPIOI_PCLK_DI();
 8000354:	4b06      	ldr	r3, [pc, #24]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 8000356:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000358:	4a05      	ldr	r2, [pc, #20]	; (8000370 <GPIO_PeripheralClockControl+0x18c>)
 800035a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800035e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000360:	bf00      	nop
 8000362:	370c      	adds	r7, #12
 8000364:	46bd      	mov	sp, r7
 8000366:	f85d 7b04 	ldr.w	r7, [sp], #4
 800036a:	4770      	bx	lr
 800036c:	40020000 	.word	0x40020000
 8000370:	40023800 	.word	0x40023800
 8000374:	40020400 	.word	0x40020400
 8000378:	40020800 	.word	0x40020800
 800037c:	40020c00 	.word	0x40020c00
 8000380:	40021000 	.word	0x40021000
 8000384:	40021400 	.word	0x40021400
 8000388:	40021800 	.word	0x40021800
 800038c:	40021c00 	.word	0x40021c00
 8000390:	40022000 	.word	0x40022000

08000394 <GPIO_Init>:
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000394:	b580      	push	{r7, lr}
 8000396:	b088      	sub	sp, #32
 8000398:	af00      	add	r7, sp, #0
 800039a:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;
 800039c:	2300      	movs	r3, #0
 800039e:	61fb      	str	r3, [r7, #28]
	GPIO_PeripheralClockControl(pGPIOHandle->pGPIOx,ENABLE);
 80003a0:	687b      	ldr	r3, [r7, #4]
 80003a2:	689b      	ldr	r3, [r3, #8]
 80003a4:	2101      	movs	r1, #1
 80003a6:	4618      	mov	r0, r3
 80003a8:	f7ff ff1c 	bl	80001e4 <GPIO_PeripheralClockControl>
	// Configure the Mode of GPIO Pin

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode<=GPIO_MODE_ANALOG)
 80003ac:	687b      	ldr	r3, [r7, #4]
 80003ae:	785b      	ldrb	r3, [r3, #1]
 80003b0:	2b03      	cmp	r3, #3
 80003b2:	d81f      	bhi.n	80003f4 <GPIO_Init+0x60>
	{
		uint32_t temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode<<(2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003b4:	687b      	ldr	r3, [r7, #4]
 80003b6:	785b      	ldrb	r3, [r3, #1]
 80003b8:	461a      	mov	r2, r3
 80003ba:	687b      	ldr	r3, [r7, #4]
 80003bc:	781b      	ldrb	r3, [r3, #0]
 80003be:	005b      	lsls	r3, r3, #1
 80003c0:	fa02 f303 	lsl.w	r3, r2, r3
 80003c4:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &=~(0x3<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003c6:	687b      	ldr	r3, [r7, #4]
 80003c8:	689b      	ldr	r3, [r3, #8]
 80003ca:	681a      	ldr	r2, [r3, #0]
 80003cc:	687b      	ldr	r3, [r7, #4]
 80003ce:	781b      	ldrb	r3, [r3, #0]
 80003d0:	4619      	mov	r1, r3
 80003d2:	2303      	movs	r3, #3
 80003d4:	408b      	lsls	r3, r1
 80003d6:	43db      	mvns	r3, r3
 80003d8:	4619      	mov	r1, r3
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	689b      	ldr	r3, [r3, #8]
 80003de:	400a      	ands	r2, r1
 80003e0:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |=temp;
 80003e2:	687b      	ldr	r3, [r7, #4]
 80003e4:	689b      	ldr	r3, [r3, #8]
 80003e6:	6819      	ldr	r1, [r3, #0]
 80003e8:	687b      	ldr	r3, [r7, #4]
 80003ea:	689b      	ldr	r3, [r3, #8]
 80003ec:	697a      	ldr	r2, [r7, #20]
 80003ee:	430a      	orrs	r2, r1
 80003f0:	601a      	str	r2, [r3, #0]
 80003f2:	e069      	b.n	80004c8 <GPIO_Init+0x134>
	}
	else
	{
		//interrupt mode
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode==GPIO_MODE_IT_FT)
 80003f4:	687b      	ldr	r3, [r7, #4]
 80003f6:	785b      	ldrb	r3, [r3, #1]
 80003f8:	2b04      	cmp	r3, #4
 80003fa:	d115      	bne.n	8000428 <GPIO_Init+0x94>
		{
			//configure FTSR
			EXTI->EXTI_FTSR |=(1U<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003fc:	4b82      	ldr	r3, [pc, #520]	; (8000608 <GPIO_Init+0x274>)
 80003fe:	68da      	ldr	r2, [r3, #12]
 8000400:	687b      	ldr	r3, [r7, #4]
 8000402:	781b      	ldrb	r3, [r3, #0]
 8000404:	4619      	mov	r1, r3
 8000406:	2301      	movs	r3, #1
 8000408:	408b      	lsls	r3, r1
 800040a:	497f      	ldr	r1, [pc, #508]	; (8000608 <GPIO_Init+0x274>)
 800040c:	4313      	orrs	r3, r2
 800040e:	60cb      	str	r3, [r1, #12]
			EXTI->EXTI_RSTR &=~(1U<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000410:	4b7d      	ldr	r3, [pc, #500]	; (8000608 <GPIO_Init+0x274>)
 8000412:	689a      	ldr	r2, [r3, #8]
 8000414:	687b      	ldr	r3, [r7, #4]
 8000416:	781b      	ldrb	r3, [r3, #0]
 8000418:	4619      	mov	r1, r3
 800041a:	2301      	movs	r3, #1
 800041c:	408b      	lsls	r3, r1
 800041e:	43db      	mvns	r3, r3
 8000420:	4979      	ldr	r1, [pc, #484]	; (8000608 <GPIO_Init+0x274>)
 8000422:	4013      	ands	r3, r2
 8000424:	608b      	str	r3, [r1, #8]
 8000426:	e031      	b.n	800048c <GPIO_Init+0xf8>

		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode==GPIO_MODE_IT_RT)
 8000428:	687b      	ldr	r3, [r7, #4]
 800042a:	785b      	ldrb	r3, [r3, #1]
 800042c:	2b05      	cmp	r3, #5
 800042e:	d115      	bne.n	800045c <GPIO_Init+0xc8>
		{
			//configure RTSR
			EXTI->EXTI_RSTR |=(1U<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000430:	4b75      	ldr	r3, [pc, #468]	; (8000608 <GPIO_Init+0x274>)
 8000432:	689a      	ldr	r2, [r3, #8]
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	781b      	ldrb	r3, [r3, #0]
 8000438:	4619      	mov	r1, r3
 800043a:	2301      	movs	r3, #1
 800043c:	408b      	lsls	r3, r1
 800043e:	4972      	ldr	r1, [pc, #456]	; (8000608 <GPIO_Init+0x274>)
 8000440:	4313      	orrs	r3, r2
 8000442:	608b      	str	r3, [r1, #8]
			EXTI->EXTI_FTSR &=~(1U<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000444:	4b70      	ldr	r3, [pc, #448]	; (8000608 <GPIO_Init+0x274>)
 8000446:	68da      	ldr	r2, [r3, #12]
 8000448:	687b      	ldr	r3, [r7, #4]
 800044a:	781b      	ldrb	r3, [r3, #0]
 800044c:	4619      	mov	r1, r3
 800044e:	2301      	movs	r3, #1
 8000450:	408b      	lsls	r3, r1
 8000452:	43db      	mvns	r3, r3
 8000454:	496c      	ldr	r1, [pc, #432]	; (8000608 <GPIO_Init+0x274>)
 8000456:	4013      	ands	r3, r2
 8000458:	60cb      	str	r3, [r1, #12]
 800045a:	e017      	b.n	800048c <GPIO_Init+0xf8>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode==GPIO_MODE_IT_RFT)
 800045c:	687b      	ldr	r3, [r7, #4]
 800045e:	785b      	ldrb	r3, [r3, #1]
 8000460:	2b06      	cmp	r3, #6
 8000462:	d113      	bne.n	800048c <GPIO_Init+0xf8>
		{
			//configure RFTSR
			EXTI->EXTI_FTSR |=(1U<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000464:	4b68      	ldr	r3, [pc, #416]	; (8000608 <GPIO_Init+0x274>)
 8000466:	68da      	ldr	r2, [r3, #12]
 8000468:	687b      	ldr	r3, [r7, #4]
 800046a:	781b      	ldrb	r3, [r3, #0]
 800046c:	4619      	mov	r1, r3
 800046e:	2301      	movs	r3, #1
 8000470:	408b      	lsls	r3, r1
 8000472:	4965      	ldr	r1, [pc, #404]	; (8000608 <GPIO_Init+0x274>)
 8000474:	4313      	orrs	r3, r2
 8000476:	60cb      	str	r3, [r1, #12]
			EXTI->EXTI_RSTR |=(1U<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000478:	4b63      	ldr	r3, [pc, #396]	; (8000608 <GPIO_Init+0x274>)
 800047a:	689a      	ldr	r2, [r3, #8]
 800047c:	687b      	ldr	r3, [r7, #4]
 800047e:	781b      	ldrb	r3, [r3, #0]
 8000480:	4619      	mov	r1, r3
 8000482:	2301      	movs	r3, #1
 8000484:	408b      	lsls	r3, r1
 8000486:	4960      	ldr	r1, [pc, #384]	; (8000608 <GPIO_Init+0x274>)
 8000488:	4313      	orrs	r3, r2
 800048a:	608b      	str	r3, [r1, #8]

		}

		//configure GPIO port selection in SYSCFG
		uint8_t temp1 ,temp2;
		temp1=pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber /4;
 800048c:	687b      	ldr	r3, [r7, #4]
 800048e:	781b      	ldrb	r3, [r3, #0]
 8000490:	089b      	lsrs	r3, r3, #2
 8000492:	76fb      	strb	r3, [r7, #27]
		temp2=pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber %4;
 8000494:	687b      	ldr	r3, [r7, #4]
 8000496:	781b      	ldrb	r3, [r3, #0]
 8000498:	f003 0303 	and.w	r3, r3, #3
 800049c:	76bb      	strb	r3, [r7, #26]

		uint8_t portcode=GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 800049e:	687b      	ldr	r3, [r7, #4]
 80004a0:	4a5a      	ldr	r2, [pc, #360]	; (800060c <GPIO_Init+0x278>)
 80004a2:	609a      	str	r2, [r3, #8]
 80004a4:	2300      	movs	r3, #0
 80004a6:	767b      	strb	r3, [r7, #25]
		SYSCFG_PCLK_EN();
 80004a8:	4b59      	ldr	r3, [pc, #356]	; (8000610 <GPIO_Init+0x27c>)
 80004aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80004ac:	4a58      	ldr	r2, [pc, #352]	; (8000610 <GPIO_Init+0x27c>)
 80004ae:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80004b2:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->SYSCFG_EXTICR[temp1]=portcode<<(4*temp2);
 80004b4:	7e7a      	ldrb	r2, [r7, #25]
 80004b6:	7ebb      	ldrb	r3, [r7, #26]
 80004b8:	009b      	lsls	r3, r3, #2
 80004ba:	fa02 f103 	lsl.w	r1, r2, r3
 80004be:	4a55      	ldr	r2, [pc, #340]	; (8000614 <GPIO_Init+0x280>)
 80004c0:	7efb      	ldrb	r3, [r7, #27]
 80004c2:	3302      	adds	r3, #2
 80004c4:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	}

	// Configure Speed
	 temp=0;
 80004c8:	2300      	movs	r3, #0
 80004ca:	61fb      	str	r3, [r7, #28]
	  temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode<<(2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	785b      	ldrb	r3, [r3, #1]
 80004d0:	461a      	mov	r2, r3
 80004d2:	687b      	ldr	r3, [r7, #4]
 80004d4:	781b      	ldrb	r3, [r3, #0]
 80004d6:	005b      	lsls	r3, r3, #1
 80004d8:	fa02 f303 	lsl.w	r3, r2, r3
 80004dc:	61fb      	str	r3, [r7, #28]
	 		pGPIOHandle->pGPIOx->OSPEED &=~(0x3<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	689b      	ldr	r3, [r3, #8]
 80004e2:	689a      	ldr	r2, [r3, #8]
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	781b      	ldrb	r3, [r3, #0]
 80004e8:	4619      	mov	r1, r3
 80004ea:	2303      	movs	r3, #3
 80004ec:	408b      	lsls	r3, r1
 80004ee:	43db      	mvns	r3, r3
 80004f0:	4619      	mov	r1, r3
 80004f2:	687b      	ldr	r3, [r7, #4]
 80004f4:	689b      	ldr	r3, [r3, #8]
 80004f6:	400a      	ands	r2, r1
 80004f8:	609a      	str	r2, [r3, #8]
	 		pGPIOHandle->pGPIOx->OSPEED |=temp;
 80004fa:	687b      	ldr	r3, [r7, #4]
 80004fc:	689b      	ldr	r3, [r3, #8]
 80004fe:	6899      	ldr	r1, [r3, #8]
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	689b      	ldr	r3, [r3, #8]
 8000504:	69fa      	ldr	r2, [r7, #28]
 8000506:	430a      	orrs	r2, r1
 8000508:	609a      	str	r2, [r3, #8]

	// Configure the pupd settings
	 temp=0;
 800050a:	2300      	movs	r3, #0
 800050c:	61fb      	str	r3, [r7, #28]
	  temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode<<(2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800050e:	687b      	ldr	r3, [r7, #4]
 8000510:	785b      	ldrb	r3, [r3, #1]
 8000512:	461a      	mov	r2, r3
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	781b      	ldrb	r3, [r3, #0]
 8000518:	005b      	lsls	r3, r3, #1
 800051a:	fa02 f303 	lsl.w	r3, r2, r3
 800051e:	61fb      	str	r3, [r7, #28]
			pGPIOHandle->pGPIOx->PUPDR &=~(0x3<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000520:	687b      	ldr	r3, [r7, #4]
 8000522:	689b      	ldr	r3, [r3, #8]
 8000524:	68da      	ldr	r2, [r3, #12]
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	781b      	ldrb	r3, [r3, #0]
 800052a:	4619      	mov	r1, r3
 800052c:	2303      	movs	r3, #3
 800052e:	408b      	lsls	r3, r1
 8000530:	43db      	mvns	r3, r3
 8000532:	4619      	mov	r1, r3
 8000534:	687b      	ldr	r3, [r7, #4]
 8000536:	689b      	ldr	r3, [r3, #8]
 8000538:	400a      	ands	r2, r1
 800053a:	60da      	str	r2, [r3, #12]
			pGPIOHandle->pGPIOx->PUPDR |=temp;
 800053c:	687b      	ldr	r3, [r7, #4]
 800053e:	689b      	ldr	r3, [r3, #8]
 8000540:	68d9      	ldr	r1, [r3, #12]
 8000542:	687b      	ldr	r3, [r7, #4]
 8000544:	689b      	ldr	r3, [r3, #8]
 8000546:	69fa      	ldr	r2, [r7, #28]
 8000548:	430a      	orrs	r2, r1
 800054a:	60da      	str	r2, [r3, #12]

	// Configure the Optype
	 temp=0;
 800054c:	2300      	movs	r3, #0
 800054e:	61fb      	str	r3, [r7, #28]
	  temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode<<(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000550:	687b      	ldr	r3, [r7, #4]
 8000552:	785b      	ldrb	r3, [r3, #1]
 8000554:	461a      	mov	r2, r3
 8000556:	687b      	ldr	r3, [r7, #4]
 8000558:	781b      	ldrb	r3, [r3, #0]
 800055a:	fa02 f303 	lsl.w	r3, r2, r3
 800055e:	61fb      	str	r3, [r7, #28]
			pGPIOHandle->pGPIOx->OTYPER &=~(0x3<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000560:	687b      	ldr	r3, [r7, #4]
 8000562:	689b      	ldr	r3, [r3, #8]
 8000564:	685a      	ldr	r2, [r3, #4]
 8000566:	687b      	ldr	r3, [r7, #4]
 8000568:	781b      	ldrb	r3, [r3, #0]
 800056a:	4619      	mov	r1, r3
 800056c:	2303      	movs	r3, #3
 800056e:	408b      	lsls	r3, r1
 8000570:	43db      	mvns	r3, r3
 8000572:	4619      	mov	r1, r3
 8000574:	687b      	ldr	r3, [r7, #4]
 8000576:	689b      	ldr	r3, [r3, #8]
 8000578:	400a      	ands	r2, r1
 800057a:	605a      	str	r2, [r3, #4]
			pGPIOHandle->pGPIOx->OTYPER |=temp;
 800057c:	687b      	ldr	r3, [r7, #4]
 800057e:	689b      	ldr	r3, [r3, #8]
 8000580:	6859      	ldr	r1, [r3, #4]
 8000582:	687b      	ldr	r3, [r7, #4]
 8000584:	689b      	ldr	r3, [r3, #8]
 8000586:	69fa      	ldr	r2, [r7, #28]
 8000588:	430a      	orrs	r2, r1
 800058a:	605a      	str	r2, [r3, #4]


	// Configure the alt functionality
			temp=0;
 800058c:	2300      	movs	r3, #0
 800058e:	61fb      	str	r3, [r7, #28]
			if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ALTFN)
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	785b      	ldrb	r3, [r3, #1]
 8000594:	2b02      	cmp	r3, #2
 8000596:	d832      	bhi.n	80005fe <GPIO_Init+0x26a>
			{
			uint32_t temp1 ,temp2;
			temp1=pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber /8;
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	781b      	ldrb	r3, [r3, #0]
 800059c:	08db      	lsrs	r3, r3, #3
 800059e:	b2db      	uxtb	r3, r3
 80005a0:	613b      	str	r3, [r7, #16]
			temp2=pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber %8;
 80005a2:	687b      	ldr	r3, [r7, #4]
 80005a4:	781b      	ldrb	r3, [r3, #0]
 80005a6:	f003 0307 	and.w	r3, r3, #7
 80005aa:	60fb      	str	r3, [r7, #12]
			pGPIOHandle->pGPIOx->AFR[temp1]&= ~(0xF <<(4 *temp2));
 80005ac:	687b      	ldr	r3, [r7, #4]
 80005ae:	689b      	ldr	r3, [r3, #8]
 80005b0:	693a      	ldr	r2, [r7, #16]
 80005b2:	3208      	adds	r2, #8
 80005b4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80005b8:	68fb      	ldr	r3, [r7, #12]
 80005ba:	009b      	lsls	r3, r3, #2
 80005bc:	210f      	movs	r1, #15
 80005be:	fa01 f303 	lsl.w	r3, r1, r3
 80005c2:	43db      	mvns	r3, r3
 80005c4:	4619      	mov	r1, r3
 80005c6:	687b      	ldr	r3, [r7, #4]
 80005c8:	689b      	ldr	r3, [r3, #8]
 80005ca:	4011      	ands	r1, r2
 80005cc:	693a      	ldr	r2, [r7, #16]
 80005ce:	3208      	adds	r2, #8
 80005d0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
			pGPIOHandle->pGPIOx->AFR[temp1]|= pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode <<(4 *temp2);
 80005d4:	687b      	ldr	r3, [r7, #4]
 80005d6:	689b      	ldr	r3, [r3, #8]
 80005d8:	693a      	ldr	r2, [r7, #16]
 80005da:	3208      	adds	r2, #8
 80005dc:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80005e0:	687b      	ldr	r3, [r7, #4]
 80005e2:	795b      	ldrb	r3, [r3, #5]
 80005e4:	4619      	mov	r1, r3
 80005e6:	68fb      	ldr	r3, [r7, #12]
 80005e8:	009b      	lsls	r3, r3, #2
 80005ea:	fa01 f303 	lsl.w	r3, r1, r3
 80005ee:	4619      	mov	r1, r3
 80005f0:	687b      	ldr	r3, [r7, #4]
 80005f2:	689b      	ldr	r3, [r3, #8]
 80005f4:	4311      	orrs	r1, r2
 80005f6:	693a      	ldr	r2, [r7, #16]
 80005f8:	3208      	adds	r2, #8
 80005fa:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
			}



}
 80005fe:	bf00      	nop
 8000600:	3720      	adds	r7, #32
 8000602:	46bd      	mov	sp, r7
 8000604:	bd80      	pop	{r7, pc}
 8000606:	bf00      	nop
 8000608:	40013c00 	.word	0x40013c00
 800060c:	40020000 	.word	0x40020000
 8000610:	40023800 	.word	0x40023800
 8000614:	40013800 	.word	0x40013800

08000618 <SPI_PeripheralClockControl>:
#include "stm32f401xx.h"
#include "stm32f401xx_spi_driver.h"
#include "stm32f401xx_gpio_driver.h"

void SPI_PeripheralClockControl(SPI_RegDef_t *pSPIx,uint8_t En_Di)
{
 8000618:	b480      	push	{r7}
 800061a:	b083      	sub	sp, #12
 800061c:	af00      	add	r7, sp, #0
 800061e:	6078      	str	r0, [r7, #4]
 8000620:	460b      	mov	r3, r1
 8000622:	70fb      	strb	r3, [r7, #3]

	if(En_Di==ENABLE)
 8000624:	78fb      	ldrb	r3, [r7, #3]
 8000626:	2b01      	cmp	r3, #1
 8000628:	d141      	bne.n	80006ae <SPI_PeripheralClockControl+0x96>
	{
		if(pSPIx==SPI1)
 800062a:	687b      	ldr	r3, [r7, #4]
 800062c:	4a43      	ldr	r2, [pc, #268]	; (800073c <SPI_PeripheralClockControl+0x124>)
 800062e:	4293      	cmp	r3, r2
 8000630:	d106      	bne.n	8000640 <SPI_PeripheralClockControl+0x28>
		{
			SPI1_PCLK_EN();
 8000632:	4b43      	ldr	r3, [pc, #268]	; (8000740 <SPI_PeripheralClockControl+0x128>)
 8000634:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000636:	4a42      	ldr	r2, [pc, #264]	; (8000740 <SPI_PeripheralClockControl+0x128>)
 8000638:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800063c:	6453      	str	r3, [r2, #68]	; 0x44
						{
							SPI6_PCLK_DI();
						}
	}

}
 800063e:	e077      	b.n	8000730 <SPI_PeripheralClockControl+0x118>
		else if(pSPIx==SPI2)
 8000640:	687b      	ldr	r3, [r7, #4]
 8000642:	4a40      	ldr	r2, [pc, #256]	; (8000744 <SPI_PeripheralClockControl+0x12c>)
 8000644:	4293      	cmp	r3, r2
 8000646:	d106      	bne.n	8000656 <SPI_PeripheralClockControl+0x3e>
					SPI2_PCLK_EN();
 8000648:	4b3d      	ldr	r3, [pc, #244]	; (8000740 <SPI_PeripheralClockControl+0x128>)
 800064a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800064c:	4a3c      	ldr	r2, [pc, #240]	; (8000740 <SPI_PeripheralClockControl+0x128>)
 800064e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000652:	6413      	str	r3, [r2, #64]	; 0x40
}
 8000654:	e06c      	b.n	8000730 <SPI_PeripheralClockControl+0x118>
		else if(pSPIx==SPI3)
 8000656:	687b      	ldr	r3, [r7, #4]
 8000658:	4a3b      	ldr	r2, [pc, #236]	; (8000748 <SPI_PeripheralClockControl+0x130>)
 800065a:	4293      	cmp	r3, r2
 800065c:	d106      	bne.n	800066c <SPI_PeripheralClockControl+0x54>
					SPI3_PCLK_EN();
 800065e:	4b38      	ldr	r3, [pc, #224]	; (8000740 <SPI_PeripheralClockControl+0x128>)
 8000660:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000662:	4a37      	ldr	r2, [pc, #220]	; (8000740 <SPI_PeripheralClockControl+0x128>)
 8000664:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000668:	6413      	str	r3, [r2, #64]	; 0x40
}
 800066a:	e061      	b.n	8000730 <SPI_PeripheralClockControl+0x118>
		else if(pSPIx==SPI4)
 800066c:	687b      	ldr	r3, [r7, #4]
 800066e:	4a37      	ldr	r2, [pc, #220]	; (800074c <SPI_PeripheralClockControl+0x134>)
 8000670:	4293      	cmp	r3, r2
 8000672:	d106      	bne.n	8000682 <SPI_PeripheralClockControl+0x6a>
					SPI4_PCLK_EN();
 8000674:	4b32      	ldr	r3, [pc, #200]	; (8000740 <SPI_PeripheralClockControl+0x128>)
 8000676:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000678:	4a31      	ldr	r2, [pc, #196]	; (8000740 <SPI_PeripheralClockControl+0x128>)
 800067a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800067e:	6453      	str	r3, [r2, #68]	; 0x44
}
 8000680:	e056      	b.n	8000730 <SPI_PeripheralClockControl+0x118>
		else if(pSPIx==SPI5)
 8000682:	687b      	ldr	r3, [r7, #4]
 8000684:	4a32      	ldr	r2, [pc, #200]	; (8000750 <SPI_PeripheralClockControl+0x138>)
 8000686:	4293      	cmp	r3, r2
 8000688:	d106      	bne.n	8000698 <SPI_PeripheralClockControl+0x80>
					SPI5_PCLK_EN();
 800068a:	4b2d      	ldr	r3, [pc, #180]	; (8000740 <SPI_PeripheralClockControl+0x128>)
 800068c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800068e:	4a2c      	ldr	r2, [pc, #176]	; (8000740 <SPI_PeripheralClockControl+0x128>)
 8000690:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000694:	6453      	str	r3, [r2, #68]	; 0x44
}
 8000696:	e04b      	b.n	8000730 <SPI_PeripheralClockControl+0x118>
		else if(pSPIx==SPI6)
 8000698:	687b      	ldr	r3, [r7, #4]
 800069a:	4a2e      	ldr	r2, [pc, #184]	; (8000754 <SPI_PeripheralClockControl+0x13c>)
 800069c:	4293      	cmp	r3, r2
 800069e:	d147      	bne.n	8000730 <SPI_PeripheralClockControl+0x118>
					SPI6_PCLK_EN();
 80006a0:	4b27      	ldr	r3, [pc, #156]	; (8000740 <SPI_PeripheralClockControl+0x128>)
 80006a2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80006a4:	4a26      	ldr	r2, [pc, #152]	; (8000740 <SPI_PeripheralClockControl+0x128>)
 80006a6:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80006aa:	6453      	str	r3, [r2, #68]	; 0x44
}
 80006ac:	e040      	b.n	8000730 <SPI_PeripheralClockControl+0x118>
		if(pSPIx==SPI1)
 80006ae:	687b      	ldr	r3, [r7, #4]
 80006b0:	4a22      	ldr	r2, [pc, #136]	; (800073c <SPI_PeripheralClockControl+0x124>)
 80006b2:	4293      	cmp	r3, r2
 80006b4:	d106      	bne.n	80006c4 <SPI_PeripheralClockControl+0xac>
					SPI1_PCLK_DI();
 80006b6:	4b22      	ldr	r3, [pc, #136]	; (8000740 <SPI_PeripheralClockControl+0x128>)
 80006b8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80006ba:	4a21      	ldr	r2, [pc, #132]	; (8000740 <SPI_PeripheralClockControl+0x128>)
 80006bc:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80006c0:	6453      	str	r3, [r2, #68]	; 0x44
}
 80006c2:	e035      	b.n	8000730 <SPI_PeripheralClockControl+0x118>
				else if(pSPIx==SPI2)
 80006c4:	687b      	ldr	r3, [r7, #4]
 80006c6:	4a1f      	ldr	r2, [pc, #124]	; (8000744 <SPI_PeripheralClockControl+0x12c>)
 80006c8:	4293      	cmp	r3, r2
 80006ca:	d106      	bne.n	80006da <SPI_PeripheralClockControl+0xc2>
							SPI2_PCLK_DI();
 80006cc:	4b1c      	ldr	r3, [pc, #112]	; (8000740 <SPI_PeripheralClockControl+0x128>)
 80006ce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80006d0:	4a1b      	ldr	r2, [pc, #108]	; (8000740 <SPI_PeripheralClockControl+0x128>)
 80006d2:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80006d6:	6413      	str	r3, [r2, #64]	; 0x40
}
 80006d8:	e02a      	b.n	8000730 <SPI_PeripheralClockControl+0x118>
				else if(pSPIx==SPI3)
 80006da:	687b      	ldr	r3, [r7, #4]
 80006dc:	4a1a      	ldr	r2, [pc, #104]	; (8000748 <SPI_PeripheralClockControl+0x130>)
 80006de:	4293      	cmp	r3, r2
 80006e0:	d106      	bne.n	80006f0 <SPI_PeripheralClockControl+0xd8>
							SPI3_PCLK_DI();
 80006e2:	4b17      	ldr	r3, [pc, #92]	; (8000740 <SPI_PeripheralClockControl+0x128>)
 80006e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80006e6:	4a16      	ldr	r2, [pc, #88]	; (8000740 <SPI_PeripheralClockControl+0x128>)
 80006e8:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80006ec:	6413      	str	r3, [r2, #64]	; 0x40
}
 80006ee:	e01f      	b.n	8000730 <SPI_PeripheralClockControl+0x118>
				else if(pSPIx==SPI4)
 80006f0:	687b      	ldr	r3, [r7, #4]
 80006f2:	4a16      	ldr	r2, [pc, #88]	; (800074c <SPI_PeripheralClockControl+0x134>)
 80006f4:	4293      	cmp	r3, r2
 80006f6:	d106      	bne.n	8000706 <SPI_PeripheralClockControl+0xee>
							SPI4_PCLK_DI();
 80006f8:	4b11      	ldr	r3, [pc, #68]	; (8000740 <SPI_PeripheralClockControl+0x128>)
 80006fa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80006fc:	4a10      	ldr	r2, [pc, #64]	; (8000740 <SPI_PeripheralClockControl+0x128>)
 80006fe:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8000702:	6453      	str	r3, [r2, #68]	; 0x44
}
 8000704:	e014      	b.n	8000730 <SPI_PeripheralClockControl+0x118>
				else if(pSPIx==SPI5)
 8000706:	687b      	ldr	r3, [r7, #4]
 8000708:	4a11      	ldr	r2, [pc, #68]	; (8000750 <SPI_PeripheralClockControl+0x138>)
 800070a:	4293      	cmp	r3, r2
 800070c:	d106      	bne.n	800071c <SPI_PeripheralClockControl+0x104>
							SPI5_PCLK_DI();
 800070e:	4b0c      	ldr	r3, [pc, #48]	; (8000740 <SPI_PeripheralClockControl+0x128>)
 8000710:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000712:	4a0b      	ldr	r2, [pc, #44]	; (8000740 <SPI_PeripheralClockControl+0x128>)
 8000714:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8000718:	6453      	str	r3, [r2, #68]	; 0x44
}
 800071a:	e009      	b.n	8000730 <SPI_PeripheralClockControl+0x118>
				else if(pSPIx==SPI6)
 800071c:	687b      	ldr	r3, [r7, #4]
 800071e:	4a0d      	ldr	r2, [pc, #52]	; (8000754 <SPI_PeripheralClockControl+0x13c>)
 8000720:	4293      	cmp	r3, r2
 8000722:	d105      	bne.n	8000730 <SPI_PeripheralClockControl+0x118>
							SPI6_PCLK_DI();
 8000724:	4b06      	ldr	r3, [pc, #24]	; (8000740 <SPI_PeripheralClockControl+0x128>)
 8000726:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000728:	4a05      	ldr	r2, [pc, #20]	; (8000740 <SPI_PeripheralClockControl+0x128>)
 800072a:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800072e:	6453      	str	r3, [r2, #68]	; 0x44
}
 8000730:	bf00      	nop
 8000732:	370c      	adds	r7, #12
 8000734:	46bd      	mov	sp, r7
 8000736:	f85d 7b04 	ldr.w	r7, [sp], #4
 800073a:	4770      	bx	lr
 800073c:	40013000 	.word	0x40013000
 8000740:	40023800 	.word	0x40023800
 8000744:	40003800 	.word	0x40003800
 8000748:	40003c00 	.word	0x40003c00
 800074c:	40013400 	.word	0x40013400
 8000750:	40015000 	.word	0x40015000
 8000754:	40015400 	.word	0x40015400

08000758 <SPI_Init>:


void SPI_Init(SPI_Handle_t *pSPIHandle)
{
 8000758:	b580      	push	{r7, lr}
 800075a:	b084      	sub	sp, #16
 800075c:	af00      	add	r7, sp, #0
 800075e:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;
 8000760:	2300      	movs	r3, #0
 8000762:	60fb      	str	r3, [r7, #12]
	SPI_PeripheralClockControl(pSPIHandle->pSPIx,ENABLE);
 8000764:	687b      	ldr	r3, [r7, #4]
 8000766:	681b      	ldr	r3, [r3, #0]
 8000768:	2101      	movs	r1, #1
 800076a:	4618      	mov	r0, r3
 800076c:	f7ff ff54 	bl	8000618 <SPI_PeripheralClockControl>
	//configure the device mode
	temp |=pSPIHandle->SPI_Config.SPI_DeviceMode<<2; //it checks the MSTR pin
 8000770:	687b      	ldr	r3, [r7, #4]
 8000772:	791b      	ldrb	r3, [r3, #4]
 8000774:	009b      	lsls	r3, r3, #2
 8000776:	461a      	mov	r2, r3
 8000778:	68fb      	ldr	r3, [r7, #12]
 800077a:	4313      	orrs	r3, r2
 800077c:	60fb      	str	r3, [r7, #12]

	//configure bus config
	if(pSPIHandle->SPI_Config.SPI_BusConfig==SPI_BUS_CONFIG_FD)
 800077e:	687b      	ldr	r3, [r7, #4]
 8000780:	795b      	ldrb	r3, [r3, #5]
 8000782:	2b01      	cmp	r3, #1
 8000784:	d104      	bne.n	8000790 <SPI_Init+0x38>
	{
		temp |=(1U<<15);
 8000786:	68fb      	ldr	r3, [r7, #12]
 8000788:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800078c:	60fb      	str	r3, [r7, #12]
 800078e:	e014      	b.n	80007ba <SPI_Init+0x62>
	}
	else if(pSPIHandle->SPI_Config.SPI_BusConfig==SPI_BUS_CONFIG_HD)
 8000790:	687b      	ldr	r3, [r7, #4]
 8000792:	795b      	ldrb	r3, [r3, #5]
 8000794:	2b02      	cmp	r3, #2
 8000796:	d104      	bne.n	80007a2 <SPI_Init+0x4a>
	{
		temp &=~(1U<<15);
 8000798:	68fb      	ldr	r3, [r7, #12]
 800079a:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 800079e:	60fb      	str	r3, [r7, #12]
 80007a0:	e00b      	b.n	80007ba <SPI_Init+0x62>

	}
	else if(pSPIHandle->SPI_Config.SPI_BusConfig==SPI_BUS_CONFIG_SIMPLEX_RX_ONLY)
 80007a2:	687b      	ldr	r3, [r7, #4]
 80007a4:	795b      	ldrb	r3, [r3, #5]
 80007a6:	2b03      	cmp	r3, #3
 80007a8:	d107      	bne.n	80007ba <SPI_Init+0x62>
	{
		temp &=~(1U<<15);
 80007aa:	68fb      	ldr	r3, [r7, #12]
 80007ac:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80007b0:	60fb      	str	r3, [r7, #12]
		temp |=(1U<<10);
 80007b2:	68fb      	ldr	r3, [r7, #12]
 80007b4:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80007b8:	60fb      	str	r3, [r7, #12]

	}

	//configure the SPI serial clock speed
	temp |=pSPIHandle->SPI_Config.SPI_SCLKSpeed<<3;
 80007ba:	687b      	ldr	r3, [r7, #4]
 80007bc:	799b      	ldrb	r3, [r3, #6]
 80007be:	00db      	lsls	r3, r3, #3
 80007c0:	461a      	mov	r2, r3
 80007c2:	68fb      	ldr	r3, [r7, #12]
 80007c4:	4313      	orrs	r3, r2
 80007c6:	60fb      	str	r3, [r7, #12]

	//configure DFF
	temp |=pSPIHandle->SPI_Config.SPI_DFF<<11;
 80007c8:	687b      	ldr	r3, [r7, #4]
 80007ca:	79db      	ldrb	r3, [r3, #7]
 80007cc:	02db      	lsls	r3, r3, #11
 80007ce:	461a      	mov	r2, r3
 80007d0:	68fb      	ldr	r3, [r7, #12]
 80007d2:	4313      	orrs	r3, r2
 80007d4:	60fb      	str	r3, [r7, #12]

	//configure CPOL
	temp |=pSPIHandle->SPI_Config.SPI_CPOL<<1;
 80007d6:	687b      	ldr	r3, [r7, #4]
 80007d8:	7a1b      	ldrb	r3, [r3, #8]
 80007da:	005b      	lsls	r3, r3, #1
 80007dc:	461a      	mov	r2, r3
 80007de:	68fb      	ldr	r3, [r7, #12]
 80007e0:	4313      	orrs	r3, r2
 80007e2:	60fb      	str	r3, [r7, #12]

	//configure CPHA
	temp |=pSPIHandle->SPI_Config.SPI_CPHA<<0;
 80007e4:	687b      	ldr	r3, [r7, #4]
 80007e6:	7a5b      	ldrb	r3, [r3, #9]
 80007e8:	461a      	mov	r2, r3
 80007ea:	68fb      	ldr	r3, [r7, #12]
 80007ec:	4313      	orrs	r3, r2
 80007ee:	60fb      	str	r3, [r7, #12]

	pSPIHandle->pSPIx->SPI_CR1=temp;
 80007f0:	687b      	ldr	r3, [r7, #4]
 80007f2:	681b      	ldr	r3, [r3, #0]
 80007f4:	68fa      	ldr	r2, [r7, #12]
 80007f6:	601a      	str	r2, [r3, #0]

}
 80007f8:	bf00      	nop
 80007fa:	3710      	adds	r7, #16
 80007fc:	46bd      	mov	sp, r7
 80007fe:	bd80      	pop	{r7, pc}

08000800 <SPI_SSIConfig>:


}

void SPI_SSIConfig(SPI_RegDef_t *pSPIx,uint8_t En_Di)
{
 8000800:	b480      	push	{r7}
 8000802:	b083      	sub	sp, #12
 8000804:	af00      	add	r7, sp, #0
 8000806:	6078      	str	r0, [r7, #4]
 8000808:	460b      	mov	r3, r1
 800080a:	70fb      	strb	r3, [r7, #3]
	if(En_Di==ENABLE)
 800080c:	78fb      	ldrb	r3, [r7, #3]
 800080e:	2b01      	cmp	r3, #1
 8000810:	d106      	bne.n	8000820 <SPI_SSIConfig+0x20>
	{
		pSPIx->SPI_CR1 |=(1U<<SPI_CR1_SSI);
 8000812:	687b      	ldr	r3, [r7, #4]
 8000814:	681b      	ldr	r3, [r3, #0]
 8000816:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800081a:	687b      	ldr	r3, [r7, #4]
 800081c:	601a      	str	r2, [r3, #0]
	}
	else{
		pSPIx->SPI_CR1 &=~(1U<<SPI_CR1_SSI);
	}
}
 800081e:	e005      	b.n	800082c <SPI_SSIConfig+0x2c>
		pSPIx->SPI_CR1 &=~(1U<<SPI_CR1_SSI);
 8000820:	687b      	ldr	r3, [r7, #4]
 8000822:	681b      	ldr	r3, [r3, #0]
 8000824:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8000828:	687b      	ldr	r3, [r7, #4]
 800082a:	601a      	str	r2, [r3, #0]
}
 800082c:	bf00      	nop
 800082e:	370c      	adds	r7, #12
 8000830:	46bd      	mov	sp, r7
 8000832:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000836:	4770      	bx	lr

08000838 <SPI_PeripheralControl>:

void SPI_PeripheralControl(SPI_RegDef_t *pSPIx,uint8_t En_Di)
{
 8000838:	b480      	push	{r7}
 800083a:	b083      	sub	sp, #12
 800083c:	af00      	add	r7, sp, #0
 800083e:	6078      	str	r0, [r7, #4]
 8000840:	460b      	mov	r3, r1
 8000842:	70fb      	strb	r3, [r7, #3]
	if(En_Di==ENABLE)
 8000844:	78fb      	ldrb	r3, [r7, #3]
 8000846:	2b01      	cmp	r3, #1
 8000848:	d106      	bne.n	8000858 <SPI_PeripheralControl+0x20>
	{
		pSPIx->SPI_CR1 |=(1U<<SPI_CR1_SPE);
 800084a:	687b      	ldr	r3, [r7, #4]
 800084c:	681b      	ldr	r3, [r3, #0]
 800084e:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8000852:	687b      	ldr	r3, [r7, #4]
 8000854:	601a      	str	r2, [r3, #0]
	}
	else{
		pSPIx->SPI_CR1 &=~(1U<<SPI_CR1_SPE);

	}
}
 8000856:	e005      	b.n	8000864 <SPI_PeripheralControl+0x2c>
		pSPIx->SPI_CR1 &=~(1U<<SPI_CR1_SPE);
 8000858:	687b      	ldr	r3, [r7, #4]
 800085a:	681b      	ldr	r3, [r3, #0]
 800085c:	f023 0240 	bic.w	r2, r3, #64	; 0x40
 8000860:	687b      	ldr	r3, [r7, #4]
 8000862:	601a      	str	r2, [r3, #0]
}
 8000864:	bf00      	nop
 8000866:	370c      	adds	r7, #12
 8000868:	46bd      	mov	sp, r7
 800086a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800086e:	4770      	bx	lr

08000870 <SPI_SSOEConfig>:

void SPI_SSOEConfig(SPI_RegDef_t *pSPIx,uint8_t En_Di)
{
 8000870:	b480      	push	{r7}
 8000872:	b083      	sub	sp, #12
 8000874:	af00      	add	r7, sp, #0
 8000876:	6078      	str	r0, [r7, #4]
 8000878:	460b      	mov	r3, r1
 800087a:	70fb      	strb	r3, [r7, #3]
	if(En_Di==ENABLE)
 800087c:	78fb      	ldrb	r3, [r7, #3]
 800087e:	2b01      	cmp	r3, #1
 8000880:	d106      	bne.n	8000890 <SPI_SSOEConfig+0x20>
	{
		pSPIx->SPI_CR2 |=(1U<<SPI_CR2_SSOE);
 8000882:	687b      	ldr	r3, [r7, #4]
 8000884:	685b      	ldr	r3, [r3, #4]
 8000886:	f043 0204 	orr.w	r2, r3, #4
 800088a:	687b      	ldr	r3, [r7, #4]
 800088c:	605a      	str	r2, [r3, #4]
	else{
		pSPIx->SPI_CR2 &=~(1U<<SPI_CR2_SSOE);

	}

}
 800088e:	e005      	b.n	800089c <SPI_SSOEConfig+0x2c>
		pSPIx->SPI_CR2 &=~(1U<<SPI_CR2_SSOE);
 8000890:	687b      	ldr	r3, [r7, #4]
 8000892:	685b      	ldr	r3, [r3, #4]
 8000894:	f023 0204 	bic.w	r2, r3, #4
 8000898:	687b      	ldr	r3, [r7, #4]
 800089a:	605a      	str	r2, [r3, #4]
}
 800089c:	bf00      	nop
 800089e:	370c      	adds	r7, #12
 80008a0:	46bd      	mov	sp, r7
 80008a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008a6:	4770      	bx	lr

080008a8 <SPI_GetFlagStatus>:

uint8_t SPI_GetFlagStatus(SPI_RegDef_t *pSPIx,uint32_t Flagname)
{
 80008a8:	b480      	push	{r7}
 80008aa:	b083      	sub	sp, #12
 80008ac:	af00      	add	r7, sp, #0
 80008ae:	6078      	str	r0, [r7, #4]
 80008b0:	6039      	str	r1, [r7, #0]
	if(pSPIx->SPI_SR & Flagname)
 80008b2:	687b      	ldr	r3, [r7, #4]
 80008b4:	689a      	ldr	r2, [r3, #8]
 80008b6:	683b      	ldr	r3, [r7, #0]
 80008b8:	4013      	ands	r3, r2
 80008ba:	2b00      	cmp	r3, #0
 80008bc:	d001      	beq.n	80008c2 <SPI_GetFlagStatus+0x1a>
	{


		return FLAG_SET;
 80008be:	2301      	movs	r3, #1
 80008c0:	e000      	b.n	80008c4 <SPI_GetFlagStatus+0x1c>
	}
	return FLAG_RESET;
 80008c2:	2300      	movs	r3, #0
}
 80008c4:	4618      	mov	r0, r3
 80008c6:	370c      	adds	r7, #12
 80008c8:	46bd      	mov	sp, r7
 80008ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008ce:	4770      	bx	lr

080008d0 <SPI_SendData>:

void SPI_SendData(SPI_RegDef_t *pSPIx,uint8_t *pTXBuffer,uint32_t length)
{
 80008d0:	b580      	push	{r7, lr}
 80008d2:	b086      	sub	sp, #24
 80008d4:	af00      	add	r7, sp, #0
 80008d6:	60f8      	str	r0, [r7, #12]
 80008d8:	60b9      	str	r1, [r7, #8]
 80008da:	607a      	str	r2, [r7, #4]
	uint8_t temp;
	while(length>0)
 80008dc:	e027      	b.n	800092e <SPI_SendData+0x5e>
	{
		//wait until TXE is empty
		while(SPI_GetFlagStatus(pSPIx,SPI_TXE_FLAG)==FLAG_RESET);
 80008de:	bf00      	nop
 80008e0:	2102      	movs	r1, #2
 80008e2:	68f8      	ldr	r0, [r7, #12]
 80008e4:	f7ff ffe0 	bl	80008a8 <SPI_GetFlagStatus>
 80008e8:	4603      	mov	r3, r0
 80008ea:	2b00      	cmp	r3, #0
 80008ec:	d0f8      	beq.n	80008e0 <SPI_SendData+0x10>

		//CHECK DFF bit in CR1
		if(pSPIx->SPI_CR1 & (1U<<SPI_CR1_DFF))
 80008ee:	68fb      	ldr	r3, [r7, #12]
 80008f0:	681b      	ldr	r3, [r3, #0]
 80008f2:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80008f6:	2b00      	cmp	r3, #0
 80008f8:	d00e      	beq.n	8000918 <SPI_SendData+0x48>
		{
			//FOR 16 BIT DATA
			pSPIx->SPI_DR=*(uint16_t*)pTXBuffer;
 80008fa:	68bb      	ldr	r3, [r7, #8]
 80008fc:	881b      	ldrh	r3, [r3, #0]
 80008fe:	461a      	mov	r2, r3
 8000900:	68fb      	ldr	r3, [r7, #12]
 8000902:	60da      	str	r2, [r3, #12]
			length--;
 8000904:	687b      	ldr	r3, [r7, #4]
 8000906:	3b01      	subs	r3, #1
 8000908:	607b      	str	r3, [r7, #4]
			length--;
 800090a:	687b      	ldr	r3, [r7, #4]
 800090c:	3b01      	subs	r3, #1
 800090e:	607b      	str	r3, [r7, #4]
			(uint16_t*)pTXBuffer++;
 8000910:	68bb      	ldr	r3, [r7, #8]
 8000912:	3301      	adds	r3, #1
 8000914:	60bb      	str	r3, [r7, #8]
 8000916:	e00a      	b.n	800092e <SPI_SendData+0x5e>
		}
		else{
			//for 8 bit data
			pSPIx->SPI_DR=*pTXBuffer;
 8000918:	68bb      	ldr	r3, [r7, #8]
 800091a:	781b      	ldrb	r3, [r3, #0]
 800091c:	461a      	mov	r2, r3
 800091e:	68fb      	ldr	r3, [r7, #12]
 8000920:	60da      	str	r2, [r3, #12]
			length--;
 8000922:	687b      	ldr	r3, [r7, #4]
 8000924:	3b01      	subs	r3, #1
 8000926:	607b      	str	r3, [r7, #4]
			pTXBuffer++;
 8000928:	68bb      	ldr	r3, [r7, #8]
 800092a:	3301      	adds	r3, #1
 800092c:	60bb      	str	r3, [r7, #8]
	while(length>0)
 800092e:	687b      	ldr	r3, [r7, #4]
 8000930:	2b00      	cmp	r3, #0
 8000932:	d1d4      	bne.n	80008de <SPI_SendData+0xe>

		}


	}
	while(!(pSPIx->SPI_CR1 & (SPI_TXE_FLAG))){} //wait until txe flag is set
 8000934:	bf00      	nop
 8000936:	68fb      	ldr	r3, [r7, #12]
 8000938:	681b      	ldr	r3, [r3, #0]
 800093a:	f003 0302 	and.w	r3, r3, #2
 800093e:	2b00      	cmp	r3, #0
 8000940:	d0f9      	beq.n	8000936 <SPI_SendData+0x66>
	while(!(pSPIx->SPI_CR1 & (SPI_RXNE_FLAG))){}  //wait until rxne flag is set
 8000942:	bf00      	nop
 8000944:	68fb      	ldr	r3, [r7, #12]
 8000946:	681b      	ldr	r3, [r3, #0]
 8000948:	f003 0301 	and.w	r3, r3, #1
 800094c:	2b00      	cmp	r3, #0
 800094e:	d0f9      	beq.n	8000944 <SPI_SendData+0x74>

		//clear overflow flag
	temp=pSPIx->SPI_DR;
 8000950:	68fb      	ldr	r3, [r7, #12]
 8000952:	68db      	ldr	r3, [r3, #12]
 8000954:	75fb      	strb	r3, [r7, #23]
	temp=pSPIx->SPI_SR;
 8000956:	68fb      	ldr	r3, [r7, #12]
 8000958:	689b      	ldr	r3, [r3, #8]
 800095a:	75fb      	strb	r3, [r7, #23]

}
 800095c:	bf00      	nop
 800095e:	3718      	adds	r7, #24
 8000960:	46bd      	mov	sp, r7
 8000962:	bd80      	pop	{r7, pc}

08000964 <SPI2_GPIO_Init>:
#include "stm32f401xx.h"
#include "stm32f401xx_spi_driver.h"
#include "stm32f401xx_gpio_driver.h"

void SPI2_GPIO_Init(void)
{
 8000964:	b580      	push	{r7, lr}
 8000966:	b084      	sub	sp, #16
 8000968:	af00      	add	r7, sp, #0
	GPIO_Handle_t SPIPins;
	SPIPins.pGPIOx=GPIOB;
 800096a:	4b14      	ldr	r3, [pc, #80]	; (80009bc <SPI2_GPIO_Init+0x58>)
 800096c:	60fb      	str	r3, [r7, #12]
	SPIPins.GPIO_PinConfig.GPIO_PinMode=GPIO_MODE_ALTFN;
 800096e:	2302      	movs	r3, #2
 8000970:	717b      	strb	r3, [r7, #5]
	SPIPins.GPIO_PinConfig.GPIO_PinAltFunMode=5;
 8000972:	2305      	movs	r3, #5
 8000974:	727b      	strb	r3, [r7, #9]
	SPIPins.GPIO_PinConfig.GPIO_PinOPType=GPIO_OP_TYPE_PP;
 8000976:	2300      	movs	r3, #0
 8000978:	723b      	strb	r3, [r7, #8]
	SPIPins.GPIO_PinConfig.GPIO_pupdControl=GPIO_NO_PUPD;
 800097a:	2300      	movs	r3, #0
 800097c:	71fb      	strb	r3, [r7, #7]
	SPIPins.GPIO_PinConfig.GPIO_PinSpeed=GPIO_SPEED_FAST;
 800097e:	2302      	movs	r3, #2
 8000980:	71bb      	strb	r3, [r7, #6]

	//SCLK
	SPIPins.GPIO_PinConfig.GPIO_PinNumber=GPIO_PIN_NO_13;
 8000982:	230d      	movs	r3, #13
 8000984:	713b      	strb	r3, [r7, #4]
	GPIO_Init(&SPIPins);
 8000986:	1d3b      	adds	r3, r7, #4
 8000988:	4618      	mov	r0, r3
 800098a:	f7ff fd03 	bl	8000394 <GPIO_Init>

	//MISO
	SPIPins.GPIO_PinConfig.GPIO_PinNumber=GPIO_PIN_NO_14;
 800098e:	230e      	movs	r3, #14
 8000990:	713b      	strb	r3, [r7, #4]
	GPIO_Init(&SPIPins);
 8000992:	1d3b      	adds	r3, r7, #4
 8000994:	4618      	mov	r0, r3
 8000996:	f7ff fcfd 	bl	8000394 <GPIO_Init>

	//MOSI
	SPIPins.GPIO_PinConfig.GPIO_PinNumber=GPIO_PIN_NO_15;
 800099a:	230f      	movs	r3, #15
 800099c:	713b      	strb	r3, [r7, #4]
	GPIO_Init(&SPIPins);
 800099e:	1d3b      	adds	r3, r7, #4
 80009a0:	4618      	mov	r0, r3
 80009a2:	f7ff fcf7 	bl	8000394 <GPIO_Init>

	//NSS
	SPIPins.GPIO_PinConfig.GPIO_PinNumber=GPIO_PIN_NO_12;
 80009a6:	230c      	movs	r3, #12
 80009a8:	713b      	strb	r3, [r7, #4]
	GPIO_Init(&SPIPins);
 80009aa:	1d3b      	adds	r3, r7, #4
 80009ac:	4618      	mov	r0, r3
 80009ae:	f7ff fcf1 	bl	8000394 <GPIO_Init>

}
 80009b2:	bf00      	nop
 80009b4:	3710      	adds	r7, #16
 80009b6:	46bd      	mov	sp, r7
 80009b8:	bd80      	pop	{r7, pc}
 80009ba:	bf00      	nop
 80009bc:	40020400 	.word	0x40020400

080009c0 <SPI2_Inits>:

void SPI2_Inits(void)
{
 80009c0:	b580      	push	{r7, lr}
 80009c2:	b086      	sub	sp, #24
 80009c4:	af00      	add	r7, sp, #0
	SPI_Handle_t SPI2Handle;

	SPI2Handle.pSPIx=SPI2;
 80009c6:	4b0c      	ldr	r3, [pc, #48]	; (80009f8 <SPI2_Inits+0x38>)
 80009c8:	603b      	str	r3, [r7, #0]
	SPI2Handle.SPI_Config.SPI_BusConfig=SPI_BUS_CONFIG_FD;
 80009ca:	2301      	movs	r3, #1
 80009cc:	717b      	strb	r3, [r7, #5]
	SPI2Handle.SPI_Config.SPI_DeviceMode=SPI_DEVICE_MODE_MASTER;
 80009ce:	2301      	movs	r3, #1
 80009d0:	713b      	strb	r3, [r7, #4]
	SPI2Handle.SPI_Config.SPI_DFF=SPI_DFF_8BITS;
 80009d2:	2300      	movs	r3, #0
 80009d4:	71fb      	strb	r3, [r7, #7]
	SPI2Handle.SPI_Config.SPI_SCLKSpeed=SPI_CLK_SPEED_DIV2;
 80009d6:	2300      	movs	r3, #0
 80009d8:	71bb      	strb	r3, [r7, #6]
	SPI2Handle.SPI_Config.SPI_CPOL=SPI_CPOL_LOW;
 80009da:	2300      	movs	r3, #0
 80009dc:	723b      	strb	r3, [r7, #8]
	SPI2Handle.SPI_Config.SPI_CPHA=SPI_CPHA_LOW;
 80009de:	2300      	movs	r3, #0
 80009e0:	727b      	strb	r3, [r7, #9]
	SPI2Handle.SPI_Config.SPI_SSM=SPI_SSM_EN;
 80009e2:	2301      	movs	r3, #1
 80009e4:	72bb      	strb	r3, [r7, #10]
	SPI_Init(&SPI2Handle);
 80009e6:	463b      	mov	r3, r7
 80009e8:	4618      	mov	r0, r3
 80009ea:	f7ff feb5 	bl	8000758 <SPI_Init>

}
 80009ee:	bf00      	nop
 80009f0:	3718      	adds	r7, #24
 80009f2:	46bd      	mov	sp, r7
 80009f4:	bd80      	pop	{r7, pc}
 80009f6:	bf00      	nop
 80009f8:	40003800 	.word	0x40003800

080009fc <main>:


int main()
{
 80009fc:	b580      	push	{r7, lr}
 80009fe:	b084      	sub	sp, #16
 8000a00:	af00      	add	r7, sp, #0
	char user_data[]="hello world";
 8000a02:	4a1b      	ldr	r2, [pc, #108]	; (8000a70 <main+0x74>)
 8000a04:	1d3b      	adds	r3, r7, #4
 8000a06:	ca07      	ldmia	r2, {r0, r1, r2}
 8000a08:	e883 0007 	stmia.w	r3, {r0, r1, r2}
	SPI2_GPIO_Init();
 8000a0c:	f7ff ffaa 	bl	8000964 <SPI2_GPIO_Init>
	SPI2_Inits();
 8000a10:	f7ff ffd6 	bl	80009c0 <SPI2_Inits>

	SPI_SSIConfig(SPI2,ENABLE);
 8000a14:	2101      	movs	r1, #1
 8000a16:	4817      	ldr	r0, [pc, #92]	; (8000a74 <main+0x78>)
 8000a18:	f7ff fef2 	bl	8000800 <SPI_SSIConfig>
	SPI_SSOEConfig(SPI2,ENABLE);
 8000a1c:	2101      	movs	r1, #1
 8000a1e:	4815      	ldr	r0, [pc, #84]	; (8000a74 <main+0x78>)
 8000a20:	f7ff ff26 	bl	8000870 <SPI_SSOEConfig>

	SPI_SendData(SPI2, user_data, strlen(user_data));
 8000a24:	1d3b      	adds	r3, r7, #4
 8000a26:	4618      	mov	r0, r3
 8000a28:	f7ff fbd4 	bl	80001d4 <strlen>
 8000a2c:	4602      	mov	r2, r0
 8000a2e:	1d3b      	adds	r3, r7, #4
 8000a30:	4619      	mov	r1, r3
 8000a32:	4810      	ldr	r0, [pc, #64]	; (8000a74 <main+0x78>)
 8000a34:	f7ff ff4c 	bl	80008d0 <SPI_SendData>
	while(1){

		SPI_PeripheralControl(SPI2,ENABLE);
 8000a38:	2101      	movs	r1, #1
 8000a3a:	480e      	ldr	r0, [pc, #56]	; (8000a74 <main+0x78>)
 8000a3c:	f7ff fefc 	bl	8000838 <SPI_PeripheralControl>
	//	uint8_t datalen=strlen(user_data);
		cs_enable();

		SPI_SendData(SPI2, user_data, strlen(user_data));
 8000a40:	1d3b      	adds	r3, r7, #4
 8000a42:	4618      	mov	r0, r3
 8000a44:	f7ff fbc6 	bl	80001d4 <strlen>
 8000a48:	4602      	mov	r2, r0
 8000a4a:	1d3b      	adds	r3, r7, #4
 8000a4c:	4619      	mov	r1, r3
 8000a4e:	4809      	ldr	r0, [pc, #36]	; (8000a74 <main+0x78>)
 8000a50:	f7ff ff3e 	bl	80008d0 <SPI_SendData>
		cs_disable();
		while(SPI_GetFlagStatus(SPI2,SPI_SR_BSY));
 8000a54:	bf00      	nop
 8000a56:	2107      	movs	r1, #7
 8000a58:	4806      	ldr	r0, [pc, #24]	; (8000a74 <main+0x78>)
 8000a5a:	f7ff ff25 	bl	80008a8 <SPI_GetFlagStatus>
 8000a5e:	4603      	mov	r3, r0
 8000a60:	2b00      	cmp	r3, #0
 8000a62:	d1f8      	bne.n	8000a56 <main+0x5a>
		SPI_PeripheralControl(SPI2,DISABLE);
 8000a64:	2100      	movs	r1, #0
 8000a66:	4803      	ldr	r0, [pc, #12]	; (8000a74 <main+0x78>)
 8000a68:	f7ff fee6 	bl	8000838 <SPI_PeripheralControl>
		SPI_PeripheralControl(SPI2,ENABLE);
 8000a6c:	e7e4      	b.n	8000a38 <main+0x3c>
 8000a6e:	bf00      	nop
 8000a70:	08000b2c 	.word	0x08000b2c
 8000a74:	40003800 	.word	0x40003800

08000a78 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000a78:	480d      	ldr	r0, [pc, #52]	; (8000ab0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000a7a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000a7c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000a80:	480c      	ldr	r0, [pc, #48]	; (8000ab4 <LoopForever+0x6>)
  ldr r1, =_edata
 8000a82:	490d      	ldr	r1, [pc, #52]	; (8000ab8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000a84:	4a0d      	ldr	r2, [pc, #52]	; (8000abc <LoopForever+0xe>)
  movs r3, #0
 8000a86:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000a88:	e002      	b.n	8000a90 <LoopCopyDataInit>

08000a8a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000a8a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000a8c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000a8e:	3304      	adds	r3, #4

08000a90 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000a90:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000a92:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000a94:	d3f9      	bcc.n	8000a8a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000a96:	4a0a      	ldr	r2, [pc, #40]	; (8000ac0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000a98:	4c0a      	ldr	r4, [pc, #40]	; (8000ac4 <LoopForever+0x16>)
  movs r3, #0
 8000a9a:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000a9c:	e001      	b.n	8000aa2 <LoopFillZerobss>

08000a9e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000a9e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000aa0:	3204      	adds	r2, #4

08000aa2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000aa2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000aa4:	d3fb      	bcc.n	8000a9e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000aa6:	f000 f811 	bl	8000acc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000aaa:	f7ff ffa7 	bl	80009fc <main>

08000aae <LoopForever>:

LoopForever:
    b LoopForever
 8000aae:	e7fe      	b.n	8000aae <LoopForever>
  ldr   r0, =_estack
 8000ab0:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000ab4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000ab8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000abc:	08000b40 	.word	0x08000b40
  ldr r2, =_sbss
 8000ac0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000ac4:	2000001c 	.word	0x2000001c

08000ac8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000ac8:	e7fe      	b.n	8000ac8 <ADC_IRQHandler>
	...

08000acc <__libc_init_array>:
 8000acc:	b570      	push	{r4, r5, r6, lr}
 8000ace:	4d0d      	ldr	r5, [pc, #52]	; (8000b04 <__libc_init_array+0x38>)
 8000ad0:	4c0d      	ldr	r4, [pc, #52]	; (8000b08 <__libc_init_array+0x3c>)
 8000ad2:	1b64      	subs	r4, r4, r5
 8000ad4:	10a4      	asrs	r4, r4, #2
 8000ad6:	2600      	movs	r6, #0
 8000ad8:	42a6      	cmp	r6, r4
 8000ada:	d109      	bne.n	8000af0 <__libc_init_array+0x24>
 8000adc:	4d0b      	ldr	r5, [pc, #44]	; (8000b0c <__libc_init_array+0x40>)
 8000ade:	4c0c      	ldr	r4, [pc, #48]	; (8000b10 <__libc_init_array+0x44>)
 8000ae0:	f000 f818 	bl	8000b14 <_init>
 8000ae4:	1b64      	subs	r4, r4, r5
 8000ae6:	10a4      	asrs	r4, r4, #2
 8000ae8:	2600      	movs	r6, #0
 8000aea:	42a6      	cmp	r6, r4
 8000aec:	d105      	bne.n	8000afa <__libc_init_array+0x2e>
 8000aee:	bd70      	pop	{r4, r5, r6, pc}
 8000af0:	f855 3b04 	ldr.w	r3, [r5], #4
 8000af4:	4798      	blx	r3
 8000af6:	3601      	adds	r6, #1
 8000af8:	e7ee      	b.n	8000ad8 <__libc_init_array+0xc>
 8000afa:	f855 3b04 	ldr.w	r3, [r5], #4
 8000afe:	4798      	blx	r3
 8000b00:	3601      	adds	r6, #1
 8000b02:	e7f2      	b.n	8000aea <__libc_init_array+0x1e>
 8000b04:	08000b38 	.word	0x08000b38
 8000b08:	08000b38 	.word	0x08000b38
 8000b0c:	08000b38 	.word	0x08000b38
 8000b10:	08000b3c 	.word	0x08000b3c

08000b14 <_init>:
 8000b14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b16:	bf00      	nop
 8000b18:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000b1a:	bc08      	pop	{r3}
 8000b1c:	469e      	mov	lr, r3
 8000b1e:	4770      	bx	lr

08000b20 <_fini>:
 8000b20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b22:	bf00      	nop
 8000b24:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000b26:	bc08      	pop	{r3}
 8000b28:	469e      	mov	lr, r3
 8000b2a:	4770      	bx	lr
